using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine;

public class ScriptGenerator : MonoBehaviour
{
    public bool makeScript = false;
    
    // Start is called before the first frame update
    void Update()
    {
        if(makeScript || ((Input.GetKey(KeyCode.LeftControl)||Input.GetKey(KeyCode.RightControl))&&Input.GetKeyDown(KeyCode.S)))
        {
            MakeScript();
            makeScript = false;
        }
    }

    public struct ExposedVars
    {
        public string exposedAs;
        public string symbol;
    }

    public void MakeScript()
    {
        Debug.Log("Making Script...");
        

        var fileWriter = new StreamWriter(SceneManager.DclProjectPath + "/src/scene.ts", false);
        fileWriter.WriteLine("// GENERATED BY DCL-EDIT\n// DO NOT MODIFY\n");

        var allExposedVars = new Dictionary<string, List<ExposedVars>>();

        foreach (var entity in SceneManager.Entities)
        {
            var exposedVars = new List<ExposedVars>();
            fileWriter.WriteLine(entity.GetTypeScript(ref exposedVars));
            allExposedVars.Add(entity.name.ToCamelCase(),exposedVars);
        }

        fileWriter.WriteLine("export let scene = {");

        foreach (var exposedVars in allExposedVars)
        {
            fileWriter.WriteLine("  " + exposedVars.Key + ":{");

            foreach (var variable in exposedVars.Value)
            {
                fileWriter.WriteLine($"    {variable.exposedAs}: {variable.symbol},");
            }

            fileWriter.WriteLine("  },");
        }

        fileWriter.WriteLine("}\n");


        fileWriter.Close();
    }
}
